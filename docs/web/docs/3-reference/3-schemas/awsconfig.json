{
  "title": "AWSConfig",
  "type": "object",
  "properties": {
    "organizations": {
      "title": "Organizations",
      "description": "A list of AWS Organizations to be managed by iambic",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/AWSOrganization"
      }
    },
    "accounts": {
      "title": "Accounts",
      "description": "A list of AWS Accounts to be managed by iambic",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/AWSAccount"
      }
    },
    "min_accounts_required_for_wildcard_included_accounts": {
      "title": "Min Accounts Required For Wildcard Included Accounts",
      "description": "Iambic will set included_accounts = * on imported resources that exist on all accounts if the minimum number of accounts is met.",
      "default": 3,
      "type": "integer"
    },
    "sqs_cloudtrail_changes_queues": {
      "title": "Sqs Cloudtrail Changes Queues",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "spoke_role_is_read_only": {
      "title": "Spoke Role Is Read Only",
      "description": "aws iambic spoke role is configured as read_only. If true, it will restrict IAMbic capability in AWS",
      "default": false,
      "type": "boolean"
    },
    "import_rules": {
      "title": "Import Rules",
      "description": "A list of rules to determine which resources to import from AWS",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/ImportRule"
      }
    }
  },
  "definitions": {
    "RegionName": {
      "title": "RegionName",
      "description": "An enumeration.",
      "enum": [
        "af-south-1",
        "ap-east-1",
        "ap-northeast-1",
        "ap-northeast-2",
        "ap-northeast-3",
        "ap-south-1",
        "ap-south-2",
        "ap-southeast-1",
        "ap-southeast-2",
        "ap-southeast-3",
        "ap-southeast-4",
        "ca-central-1",
        "cn-north-1",
        "cn-northwest-1",
        "eu-central-1",
        "eu-central-2",
        "eu-north-1",
        "eu-south-1",
        "eu-south-2",
        "eu-west-1",
        "eu-west-2",
        "eu-west-3",
        "il-central-1",
        "me-central-1",
        "me-south-1",
        "sa-east-1",
        "us-east-1",
        "us-east-2",
        "us-gov-east-1",
        "us-gov-west-1",
        "us-west-1",
        "us-west-2"
      ]
    },
    "AWSIdentityCenter": {
      "title": "AWSIdentityCenter",
      "type": "object",
      "properties": {
        "region": {
          "description": "Region identity center is configured on",
          "default": "us-east-1",
          "allOf": [
            {
              "$ref": "#/definitions/RegionName"
            }
          ]
        }
      }
    },
    "IambicManaged": {
      "title": "IambicManaged",
      "description": "An enumeration.",
      "enum": [
        "undefined",
        "read_and_write",
        "import_only",
        "enforced",
        "disabled"
      ]
    },
    "BaseAWSOrgRule": {
      "title": "BaseAWSOrgRule",
      "description": "A base model class that provides additional helper methods and\nconfigurations for other models used in IAMbic.",
      "type": "object",
      "properties": {
        "iambic_managed": {
          "description": "Controls the directionality of iambic changes",
          "default": "undefined",
          "allOf": [
            {
              "$ref": "#/definitions/IambicManaged"
            }
          ]
        }
      }
    },
    "AWSOrgAccountRule": {
      "title": "AWSOrgAccountRule",
      "description": "A base model class that provides additional helper methods and\nconfigurations for other models used in IAMbic.",
      "type": "object",
      "properties": {
        "iambic_managed": {
          "description": "Controls the directionality of iambic changes",
          "default": "undefined",
          "allOf": [
            {
              "$ref": "#/definitions/IambicManaged"
            }
          ]
        },
        "included_accounts": {
          "title": "Includedaccounts",
          "description": "A list of account ids and/or account names this rule applies to. Account ids/names can be represented as a regex and string",
          "default": [
            "*"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excluded_accounts": {
          "title": "Excludedaccounts",
          "description": "A list of account ids and/or account names this rule explicitly does not apply to. Account ids/names can be represented as a regex and string",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AWSOrganization": {
      "title": "AWSOrganization",
      "type": "object",
      "properties": {
        "default_region": {
          "description": "Default region to use when making AWS requests",
          "default": "us-east-1",
          "allOf": [
            {
              "$ref": "#/definitions/RegionName"
            }
          ]
        },
        "aws_profile": {
          "title": "Aws Profile",
          "description": "The AWS profile used when making calls to the account",
          "type": "string"
        },
        "hub_role_arn": {
          "title": "Hub Role Arn",
          "description": "The role arn to assume into when making calls to the account",
          "type": "string"
        },
        "external_id": {
          "title": "External Id",
          "description": "The external id to use for assuming into a role when making calls to the account",
          "type": "string"
        },
        "boto3_session_map": {
          "title": "Boto3 Session Map",
          "type": "object"
        },
        "org_name": {
          "title": "Org Name",
          "description": "Optional friendly name for the organization",
          "type": "string"
        },
        "org_id": {
          "title": "Org Id",
          "description": "A unique identifier designating the identity of the organization",
          "type": "string"
        },
        "org_account_id": {
          "title": "Org Account Id",
          "description": "The AWS Organization's master account ID",
          "minLength": 12,
          "maxLength": 12,
          "type": "string"
        },
        "identity_center": {
          "title": "Identity Center",
          "description": "The AWS Account ID and region of the AWS Identity Center instance to use for this organization",
          "allOf": [
            {
              "$ref": "#/definitions/AWSIdentityCenter"
            }
          ]
        },
        "default_rule": {
          "title": "Default Rule",
          "description": "The rule used to determine how an organization account should be handled if the account was not found in account_rules.",
          "default": {
            "metadata_commented_dict": {},
            "iambic_managed": "undefined"
          },
          "allOf": [
            {
              "$ref": "#/definitions/BaseAWSOrgRule"
            }
          ]
        },
        "account_rules": {
          "title": "Account Rules",
          "description": "A list of rules used to determine how organization accounts are handled",
          "default": [],
          "type": "array",
          "items": {
            "$ref": "#/definitions/AWSOrgAccountRule"
          }
        },
        "spoke_role_is_read_only": {
          "title": "Spoke Role Is Read Only",
          "description": "if true, the spoke role will be limited to read-only permissions",
          "default": false,
          "type": "boolean"
        },
        "preferred_spoke_role_name": {
          "title": "Preferred Spoke Role Name",
          "description": "SpokeRoleName use across organization",
          "default": "IambicSpokeRole",
          "type": "string"
        }
      },
      "required": [
        "hub_role_arn",
        "org_account_id"
      ]
    },
    "Partition": {
      "title": "Partition",
      "description": "An enumeration.",
      "enum": [
        "aws",
        "aws-us-gov",
        "aws-cn"
      ]
    },
    "Variable": {
      "title": "Variable",
      "type": "object",
      "properties": {
        "key": {
          "title": "Key",
          "type": "string"
        },
        "value": {
          "title": "Value",
          "type": "string"
        }
      },
      "required": [
        "key",
        "value"
      ]
    },
    "IdentityCenterDetails": {
      "title": "IdentityCenterDetails",
      "type": "object",
      "properties": {
        "region": {
          "default": "us-east-1",
          "allOf": [
            {
              "$ref": "#/definitions/RegionName"
            }
          ]
        },
        "instance_arn": {
          "title": "Instance Arn",
          "type": "string"
        },
        "identity_store_id": {
          "title": "Identity Store Id",
          "type": "string"
        },
        "permission_set_map": {
          "title": "Permission Set Map",
          "type": "object"
        },
        "user_map": {
          "title": "User Map",
          "type": "object"
        },
        "group_map": {
          "title": "Group Map",
          "type": "object"
        },
        "org_account_map": {
          "title": "Org Account Map",
          "type": "object"
        }
      }
    },
    "AWSAccount": {
      "title": "AWSAccount",
      "description": "Inherited by the provider class to provide a consistent interface for AccessModelMixin\n\nFor AWS, this is the AWS account\nFor GCP, this is the GCP project\nFor Okta, this is the IDP domain",
      "type": "object",
      "properties": {
        "default_region": {
          "description": "Default region to use when making AWS requests",
          "default": "us-east-1",
          "allOf": [
            {
              "$ref": "#/definitions/RegionName"
            }
          ]
        },
        "aws_profile": {
          "title": "Aws Profile",
          "description": "The AWS profile used when making calls to the account",
          "type": "string"
        },
        "hub_role_arn": {
          "title": "Hub Role Arn",
          "description": "The role arn to assume into when making calls to the account",
          "type": "string"
        },
        "external_id": {
          "title": "External Id",
          "description": "The external id to use for assuming into a role when making calls to the account",
          "type": "string"
        },
        "boto3_session_map": {
          "title": "Boto3 Session Map",
          "type": "object"
        },
        "iambic_managed": {
          "description": "Controls the directionality of iambic changes",
          "default": "undefined",
          "allOf": [
            {
              "$ref": "#/definitions/IambicManaged"
            }
          ]
        },
        "account_id": {
          "title": "Account Id",
          "description": "The AWS Account ID",
          "minLength": 12,
          "maxLength": 12,
          "type": "string"
        },
        "org_id": {
          "title": "Org Id",
          "description": "A unique identifier designating the identity of the organization",
          "type": "string"
        },
        "account_name": {
          "title": "Account Name",
          "type": "string"
        },
        "partition": {
          "description": "The AWS partition the account is in. Options are aws, aws-us-gov, and aws-cn",
          "default": "aws",
          "allOf": [
            {
              "$ref": "#/definitions/Partition"
            }
          ]
        },
        "variables": {
          "title": "Variables",
          "description": "A list of variables to be used when creating templates",
          "default": [],
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        },
        "hub_session_info": {
          "title": "Hub Session Info",
          "type": "object"
        },
        "identity_center_details": {
          "$ref": "#/definitions/IdentityCenterDetails"
        },
        "spoke_role_arn": {
          "title": "Spoke Role Arn",
          "description": "(Auto-populated) The role arn to assume into when making calls to the account",
          "type": "string"
        },
        "assume_role_arn": {
          "title": "Assume Role Arn",
          "description": "The role arn to assume into when making calls to the account",
          "type": "string"
        },
        "organization": {
          "title": "Organization",
          "description": "The AWS Organization this account belongs to"
        }
      },
      "required": [
        "account_name"
      ]
    },
    "ImportRuleTag": {
      "title": "ImportRuleTag",
      "type": "object",
      "properties": {
        "key": {
          "title": "Key",
          "description": "The key of the tag to match",
          "type": "string"
        },
        "value": {
          "title": "Value",
          "description": "The value of the tag to match",
          "type": "string"
        }
      },
      "required": [
        "key"
      ]
    },
    "ImportAction": {
      "title": "ImportAction",
      "description": "An enumeration.",
      "enum": [
        "ignore",
        "set_import_only"
      ]
    },
    "ImportRule": {
      "title": "ImportRule",
      "type": "object",
      "properties": {
        "match_tags": {
          "title": "Match Tags",
          "description": "A list of tags to match for the rule",
          "default": [],
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportRuleTag"
          }
        },
        "match_names": {
          "title": "Match Names",
          "description": "A list of resource names to match for the rule",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "match_paths": {
          "title": "Match Paths",
          "description": "A list of resource paths to match for the rule",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "match_template_types": {
          "title": "Match Template Types",
          "description": "A list of resource template types to match for the rule",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "action": {
          "description": "The action to take when the rule matches (e.g., 'ignore', 'set_import_only')",
          "allOf": [
            {
              "$ref": "#/definitions/ImportAction"
            }
          ]
        }
      },
      "required": [
        "action"
      ]
    }
  }
}